#pragma once
#include <math.h>

#define LEFT_BOUND -4.0     ///< Левая граница промежутка интерполирования
#define RIGHT_BOUND 5.0     ///< Правая граница промежутка интерполирования

/**
 * @brief Структура для представления точки на плоскости с дополнительной информацией.
 *
 * Данная структура хранит координаты точки и значение разделённой разности,
 * используемое в построении интерполяционного полинома в форме Ньютона.
 *
 * @note Поле dividedDifference содержит разделённую разность [y_0, ..., y_i], 
 * где i – индекс данной точки в массиве точек, используемом для построения интерполяционного полинома.
 */
struct Point {
    double x;                   ///< x координата точки
    double y;                   ///< y координата точки
    double dividedDifference;   ///< Разделённая разность [y_0, ..., y_i] для данной точки.
};
/**
 * @brief Перечисление типов распределения узлов для интерполяции.
 *
 * Определяет тип узлов, которые будут использоваться при построении интерполяционной сетки.
 */
enum Type {
    CHEBYSHEV,  ///< Узлы Чебышёва
    UNIFORM     ///< Равномерно разделённые узлы
};

void getGrid(Type gridType, Point *grid, double (*function) (double), int nodes);
